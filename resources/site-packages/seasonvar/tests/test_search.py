# coding: utf-8

#
# Copyright © 2017 weirdgiraffe <giraffe@cyberzoo.xyz>
#
# Distributed under terms of the MIT license.
#
from __future__ import unicode_literals
import codecs
import json
import os
import pytest
from seasonvar.search import response_items, searchitems


def assetpath(path):
    return os.path.join(os.path.dirname(__file__), 'assets', path)


@pytest.mark.parametrize('asset, expected_suggestions', [
    ('search-no-results.json', 0),
    ('search-cyrilic-results.json', 8),
    ('search-bone-results.json', 18),
])
def test_search_response_parsing(asset, expected_suggestions):
    with codecs.open(assetpath(asset), 'r', 'utf-8') as f:
        items = [x for x in response_items(json.loads(f.read()))]
        assert len(items) == expected_suggestions
        for i in items:
            assert i['url'] is not None


@pytest.mark.online
def test_latin_search():
    suggestions = list(searchitems('bone'))
    assert len(suggestions) > 1
    for i in suggestions:
        assert i['url'] is not None


@pytest.mark.online
def test_cyrilic_search():
    suggestions = list(searchitems('при'))
    assert len(suggestions) > 1
    for i in suggestions:
        assert i['url'] is not None


@pytest.mark.online
def test_bad_search():
    suggestions = list(searchitems('jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjпри'))
    assert len(suggestions) == 0
